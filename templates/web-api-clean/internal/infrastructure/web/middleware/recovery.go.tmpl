package middleware

import (
	"net/http"
	"runtime/debug"

	"{{.ModulePath}}/internal/domain/ports"
)

// Recovery returns a recovery middleware that handles panics
func Recovery(logger ports.Logger) ports.HTTPHandler {
	return func(ctx ports.HTTPContext) {
		defer func() {
			if err := recover(); err != nil {
				// Log the panic with stack trace
				logger.Error("Panic recovered",
					"error", err,
					"path", ctx.GetRequest().URL.Path,
					"method", ctx.GetRequest().Method,
					"stack", string(debug.Stack()),
				)

				// Return generic error response
				ctx.JSON(http.StatusInternalServerError, map[string]interface{}{
					"error":   "INTERNAL_ERROR",
					"message": "An internal server error occurred",
				})

				// Note: Framework-specific abort/halt would be handled by the adapter
			}
		}()

		ctx.Next()
	}
}