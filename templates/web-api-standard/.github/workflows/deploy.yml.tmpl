{{- if or (eq .DeploymentTarget "docker") (eq .DeploymentTarget "kubernetes") }}
name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{`{{ secrets.DOCKER_USERNAME }}`}}
        password: ${{`{{ secrets.DOCKER_PASSWORD }}`}}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{`{{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{`{{version}}`}}
          type=semver,pattern={{`{{major}}.{{minor}}`}}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{`{{ steps.meta.outputs.tags }}`}}
        labels: ${{`{{ steps.meta.outputs.labels }}`}}
        cache-from: type=gha
        cache-to: type=gha,mode=max

{{- if eq .DeploymentTarget "kubernetes" }}
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{`{{ secrets.KUBE_CONFIG }}`}}" | base64 -d > $HOME/.kube/config
    
    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/{{.ProjectName}} {{.ProjectName}}=${{`{{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:${{`{{ github.sha }}`}}
        kubectl rollout status deployment/{{.ProjectName}}
{{- end }}
{{- end }}