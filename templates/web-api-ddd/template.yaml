name: "web-api-ddd"
description: "Domain-Driven Design Web API template with strategic design patterns"
type: "web-api"
architecture: "ddd"
version: "1.0.0"
author: "Go-Starter Team"
license: "MIT"

variables:
  - name: "ProjectName"
    description: "Name of the project"
    type: "string"
    required: true
    validation: "^[a-zA-Z0-9_-]+$"

  - name: "ModulePath"
    description: "Go module path"
    type: "string"
    required: true
    validation: "^[a-zA-Z0-9._/-]+$"

  - name: "Author"
    description: "Project author"
    type: "string"
    required: false
    default: ""

  - name: "Email"
    description: "Author email"
    type: "string"
    required: false
    default: ""

  - name: "License"
    description: "Project license"
    type: "string"
    required: false
    default: "MIT"
    choices:
      - "MIT"
      - "Apache-2.0"
      - "GPL-3.0"
      - "BSD-3-Clause"

  - name: "GoVersion"
    description: "Go version to use"
    type: "string"
    required: false
    default: "1.21"

  - name: "Framework"
    description: "Web framework"
    type: "string"
    required: false
    default: "gin"
    choices:
      - "gin"
      - "echo"
      - "fiber"
      - "chi"
      - "stdlib"

  - name: "Logger"
    description: "Logging library"
    type: "string"
    required: false
    default: "slog"
    choices:
      - "slog"
      - "zap"
      - "logrus"
      - "zerolog"

  - name: "DatabaseDriver"
    description: "Database driver"
    type: "string"
    required: false
    default: "postgres"
    choices:
      - ""
      - "postgres"
      - "mysql"
      - "sqlite"
      - "redis"

  - name: "DatabaseORM"
    description: "Database ORM/query builder (empty for standard library database/sql)"
    type: "string"
    required: false
    default: ""
    choices:
      - ""
      - "gorm"
      - "sqlx"
      - "sqlc"

  - name: "AuthType"
    description: "Authentication type"
    type: "string"
    required: false
    default: "jwt"
    choices:
      - ""
      - "jwt"
      - "oauth2"
      - "session"

  - name: "DomainName"
    description: "Primary domain name (e.g., 'user', 'order', 'inventory')"
    type: "string"
    required: false
    default: "user"

files:
  # Core application files
  - source: "cmd/server/main.go.tmpl"
    destination: "cmd/server/main.go"

  - source: "go.mod.tmpl"
    destination: "go.mod"

  - source: "Makefile.tmpl"
    destination: "Makefile"

  - source: "README.md.tmpl"
    destination: "README.md"

  # Shared kernel
  - source: "internal/shared/errors/domain_errors.go.tmpl"
    destination: "internal/shared/errors/domain_errors.go"

  - source: "internal/shared/errors/application_errors.go.tmpl"
    destination: "internal/shared/errors/application_errors.go"

  - source: "internal/shared/valueobjects/id.go.tmpl"
    destination: "internal/shared/valueobjects/id.go"

  - source: "internal/shared/valueobjects/email.go.tmpl"
    destination: "internal/shared/valueobjects/email.go"

  - source: "internal/shared/events/domain_event.go.tmpl"
    destination: "internal/shared/events/domain_event.go"

  - source: "internal/shared/events/event_dispatcher.go.tmpl"
    destination: "internal/shared/events/event_dispatcher.go"

  # Domain Layer - Core business logic
  - source: "internal/domain/user/entity.go.tmpl"
    destination: "internal/domain/{{.DomainName}}/entity.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/domain/user/value_objects.go.tmpl"
    destination: "internal/domain/{{.DomainName}}/value_objects.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/domain/user/repository.go.tmpl"
    destination: "internal/domain/{{.DomainName}}/repository.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/domain/user/service.go.tmpl"
    destination: "internal/domain/{{.DomainName}}/service.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/domain/user/events.go.tmpl"
    destination: "internal/domain/{{.DomainName}}/events.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/domain/user/specifications.go.tmpl"
    destination: "internal/domain/{{.DomainName}}/specifications.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  # Application Layer - Use cases and application services
  - source: "internal/application/user/commands.go.tmpl"
    destination: "internal/application/{{.DomainName}}/commands.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/application/user/queries.go.tmpl"
    destination: "internal/application/{{.DomainName}}/queries.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/application/user/command_handlers.go.tmpl"
    destination: "internal/application/{{.DomainName}}/command_handlers.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/application/user/query_handlers.go.tmpl"
    destination: "internal/application/{{.DomainName}}/query_handlers.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/application/user/dto.go.tmpl"
    destination: "internal/application/{{.DomainName}}/dto.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/application/auth/commands.go.tmpl"
    destination: "internal/application/auth/commands.go"
    condition: "{{ne .AuthType \"\"}}"

  - source: "internal/application/auth/command_handlers.go.tmpl"
    destination: "internal/application/auth/command_handlers.go"
    condition: "{{ne .AuthType \"\"}}"

  - source: "internal/application/auth/dto.go.tmpl"
    destination: "internal/application/auth/dto.go"
    condition: "{{ne .AuthType \"\"}}"

  # Infrastructure Layer - External concerns
  - source: "internal/infrastructure/config/config.go.tmpl"
    destination: "internal/infrastructure/config/config.go"

  - source: "internal/infrastructure/persistence/database.go.tmpl"
    destination: "internal/infrastructure/persistence/database.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/infrastructure/persistence/user_repository.go.tmpl"
    destination: "internal/infrastructure/persistence/{{.DomainName}}_repository.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/infrastructure/persistence/migrations.go.tmpl"
    destination: "internal/infrastructure/persistence/migrations.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  # Logger infrastructure
  - source: "internal/infrastructure/logger/interface.go.tmpl"
    destination: "internal/infrastructure/logger/interface.go"

  - source: "internal/infrastructure/logger/factory.go.tmpl"
    destination: "internal/infrastructure/logger/factory.go"

  - source: "internal/infrastructure/logger/slog.go.tmpl"
    destination: "internal/infrastructure/logger/slog.go"
    condition: "{{eq .Logger \"slog\"}}"

  - source: "internal/infrastructure/logger/zap.go.tmpl"
    destination: "internal/infrastructure/logger/zap.go"
    condition: "{{eq .Logger \"zap\"}}"

  - source: "internal/infrastructure/logger/logrus.go.tmpl"
    destination: "internal/infrastructure/logger/logrus.go"
    condition: "{{eq .Logger \"logrus\"}}"

  - source: "internal/infrastructure/logger/zerolog.go.tmpl"
    destination: "internal/infrastructure/logger/zerolog.go"
    condition: "{{eq .Logger \"zerolog\"}}"

  # Presentation Layer - HTTP handlers and DTOs
  - source: "internal/presentation/http/handlers/health_gin.go.tmpl"
    destination: "internal/presentation/http/handlers/health.go"
    condition: "{{eq .Framework \"gin\"}}"

  - source: "internal/presentation/http/handlers/health_echo.go.tmpl"
    destination: "internal/presentation/http/handlers/health.go"
    condition: "{{eq .Framework \"echo\"}}"

  - source: "internal/presentation/http/handlers/health_fiber.go.tmpl"
    destination: "internal/presentation/http/handlers/health.go"
    condition: "{{eq .Framework \"fiber\"}}"

  - source: "internal/presentation/http/handlers/health_chi.go.tmpl"
    destination: "internal/presentation/http/handlers/health.go"
    condition: "{{eq .Framework \"chi\"}}"

  - source: "internal/presentation/http/handlers/health_stdlib.go.tmpl"
    destination: "internal/presentation/http/handlers/health.go"
    condition: "{{eq .Framework \"stdlib\"}}"

  - source: "internal/presentation/http/handlers/user_gin.go.tmpl"
    destination: "internal/presentation/http/handlers/{{.DomainName}}.go"
    condition: "{{and (ne .DatabaseDriver \"\") (eq .Framework \"gin\")}}"

  - source: "internal/presentation/http/handlers/user_echo.go.tmpl"
    destination: "internal/presentation/http/handlers/{{.DomainName}}.go"
    condition: "{{and (ne .DatabaseDriver \"\") (eq .Framework \"echo\")}}"

  - source: "internal/presentation/http/handlers/user_fiber.go.tmpl"
    destination: "internal/presentation/http/handlers/{{.DomainName}}.go"
    condition: "{{and (ne .DatabaseDriver \"\") (eq .Framework \"fiber\")}}"

  - source: "internal/presentation/http/handlers/user_chi.go.tmpl"
    destination: "internal/presentation/http/handlers/{{.DomainName}}.go"
    condition: "{{and (ne .DatabaseDriver \"\") (eq .Framework \"chi\")}}"

  - source: "internal/presentation/http/handlers/user_stdlib.go.tmpl"
    destination: "internal/presentation/http/handlers/{{.DomainName}}.go"
    condition: "{{and (ne .DatabaseDriver \"\") (eq .Framework \"stdlib\")}}"

  - source: "internal/presentation/http/handlers/auth_gin.go.tmpl"
    destination: "internal/presentation/http/handlers/auth.go"
    condition: "{{and (ne .AuthType \"\") (eq .Framework \"gin\")}}"

  - source: "internal/presentation/http/handlers/auth_echo.go.tmpl"
    destination: "internal/presentation/http/handlers/auth.go"
    condition: "{{and (ne .AuthType \"\") (eq .Framework \"echo\")}}"

  - source: "internal/presentation/http/handlers/auth_fiber.go.tmpl"
    destination: "internal/presentation/http/handlers/auth.go"
    condition: "{{and (ne .AuthType \"\") (eq .Framework \"fiber\")}}"

  - source: "internal/presentation/http/handlers/auth_chi.go.tmpl"
    destination: "internal/presentation/http/handlers/auth.go"
    condition: "{{and (ne .AuthType \"\") (eq .Framework \"chi\")}}"

  - source: "internal/presentation/http/handlers/auth_stdlib.go.tmpl"
    destination: "internal/presentation/http/handlers/auth.go"
    condition: "{{and (ne .AuthType \"\") (eq .Framework \"stdlib\")}}"

  - source: "internal/presentation/http/middleware/auth.go.tmpl"
    destination: "internal/presentation/http/middleware/auth.go"
    condition: "{{ne .AuthType \"\"}}"

  - source: "internal/presentation/http/middleware/logging.go.tmpl"
    destination: "internal/presentation/http/middleware/logging.go"

  - source: "internal/presentation/http/middleware/cors.go.tmpl"
    destination: "internal/presentation/http/middleware/cors.go"

  - source: "internal/presentation/http/dto/requests.go.tmpl"
    destination: "internal/presentation/http/dto/requests.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "internal/presentation/http/dto/responses.go.tmpl"
    destination: "internal/presentation/http/dto/responses.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  # Docker and deployment
  - source: "Dockerfile.tmpl"
    destination: "Dockerfile"

  - source: "docker-compose.yml.tmpl"
    destination: "docker-compose.yml"
    condition: "{{ne .DatabaseDriver \"\"}}"

  # Configuration files
  - source: "configs/config.dev.yaml.tmpl"
    destination: "configs/config.dev.yaml"

  - source: "configs/config.prod.yaml.tmpl"
    destination: "configs/config.prod.yaml"

  - source: "configs/config.test.yaml.tmpl"
    destination: "configs/config.test.yaml"

  # Environment and Git
  - source: ".env.example.tmpl"
    destination: ".env.example"

  - source: ".gitignore.tmpl"
    destination: ".gitignore"

  # API Documentation
  - source: "api/openapi.yaml.tmpl"
    destination: "api/openapi.yaml"

  # Database migrations
  - source: "migrations/001_create_users.up.sql.tmpl"
    destination: "migrations/001_create_users.up.sql"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "migrations/001_create_users.down.sql.tmpl"
    destination: "migrations/001_create_users.down.sql"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "migrations/embed.go.tmpl"
    destination: "migrations/embed.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  # Tests - DDD focused testing
  - source: "tests/unit/domain/user_test.go.tmpl"
    destination: "tests/unit/domain/{{.DomainName}}_test.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "tests/unit/application/user_test.go.tmpl"
    destination: "tests/unit/application/{{.DomainName}}_test.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "tests/integration/api_test.go.tmpl"
    destination: "tests/integration/api_test.go"

  - source: "tests/integration/repository_test.go.tmpl"
    destination: "tests/integration/repository_test.go"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "tests/testdata/fixtures.json.tmpl"
    destination: "tests/testdata/fixtures.json"
    condition: "{{ne .DatabaseDriver \"\"}}"

  # Scripts
  - source: "scripts/migrate.sh.tmpl"
    destination: "scripts/migrate.sh"
    condition: "{{ne .DatabaseDriver \"\"}}"

  - source: "scripts/dev.sh.tmpl"
    destination: "scripts/dev.sh"

dependencies:
  - module: "github.com/gin-gonic/gin"
    version: "v1.9.1"
    condition: "{{eq .Framework \"gin\"}}"
  - module: "github.com/labstack/echo/v4"
    version: "v4.11.3"
    condition: "{{eq .Framework \"echo\"}}"
  - module: "github.com/gofiber/fiber/v2"
    version: "v2.51.0"
    condition: "{{eq .Framework \"fiber\"}}"
  - module: "github.com/go-chi/chi/v5"
    version: "v5.0.10"
    condition: "{{eq .Framework \"chi\"}}"
  # No dependencies for stdlib framework
  - module: "github.com/spf13/viper"
    version: "v1.16.0"
  - module: "go.uber.org/zap"
    version: "v1.26.0"
    condition: "{{eq .Logger \"zap\"}}"
  - module: "github.com/sirupsen/logrus"
    version: "v1.9.3"
    condition: "{{eq .Logger \"logrus\"}}"
  - module: "github.com/rs/zerolog"
    version: "v1.31.0"
    condition: "{{eq .Logger \"zerolog\"}}"
  - module: "github.com/lib/pq"
    version: "v1.10.9"
    condition: "{{eq .DatabaseDriver \"postgres\"}}"
  - module: "gorm.io/gorm"
    version: "v1.25.4"
    condition: "{{and (ne .DatabaseDriver \"\") (eq .DatabaseORM \"gorm\")}}"
  - module: "gorm.io/driver/postgres"
    version: "v1.5.2"
    condition: "{{and (eq .DatabaseDriver \"postgres\") (eq .DatabaseORM \"gorm\")}}"
  - module: "gorm.io/driver/mysql"
    version: "v1.5.2"
    condition: "{{and (eq .DatabaseDriver \"mysql\") (eq .DatabaseORM \"gorm\")}}"
  - module: "gorm.io/driver/sqlite"
    version: "v1.5.4"
    condition: "{{and (eq .DatabaseDriver \"sqlite\") (eq .DatabaseORM \"gorm\")}}"
  - module: "github.com/redis/go-redis/v9"
    version: "v9.3.0"
    condition: "{{eq .DatabaseDriver \"redis\"}}"
  - module: "github.com/jmoiron/sqlx"
    version: "v1.3.5"
    condition: "{{and (ne .DatabaseDriver \"\") (ne .DatabaseDriver \"redis\") (eq .DatabaseORM \"sqlx\")}}"
  - module: "github.com/golang-jwt/jwt/v5"
    version: "v5.0.0"
    condition: "{{eq .AuthType \"jwt\"}}"
  - module: "github.com/stretchr/testify"
    version: "v1.8.4"
  # DDD specific dependencies
  - module: "github.com/google/uuid"
    version: "v1.4.0"

post_hooks:
  - name: "clean_dependencies"
    command: "go mod tidy"
    work_dir: "{{.OutputPath}}"
    
  - name: "format_code"
    command: "go fmt ./..."
    work_dir: "{{.OutputPath}}"

  - name: "make_scripts_executable" 
    command: "chmod +x scripts/*.sh"
    work_dir: "{{.OutputPath}}"

features:
  - name: "domain_modeling"
    description: "Rich domain models with business logic encapsulation"
    enabled_when: "true"
    
  - name: "cqrs_pattern"
    description: "Command Query Responsibility Segregation"
    enabled_when: "true"
    
  - name: "domain_events"
    description: "Domain events for decoupled communication"
    enabled_when: "true"
    
  - name: "specifications"
    description: "Specification pattern for complex business rules"
    enabled_when: "true"
    
  - name: "logging"
    description: "Structured logging with configurable logger"
    enabled_when: "true"
    
  - name: "database"
    description: "Database integration with repository pattern"
    enabled_when: "{{ne .DatabaseDriver \"\"}}"
    
  - name: "authentication"
    description: "JWT authentication with domain-driven approach"
    enabled_when: "{{ne .AuthType \"\"}}"
    
  - name: "docker"
    description: "Docker containerization"
    enabled_when: "true"
    
  - name: "openapi"
    description: "OpenAPI/Swagger documentation"
    enabled_when: "true"

validation:
  - name: "go_version_compatibility"
    description: "Ensure Go version is compatible"
    value: "1.18"
    
  - name: "module_path_format"
    description: "Validate module path format"
    
  - name: "project_name_format"
    description: "Validate project name format"
    
  - name: "domain_name_format"
    description: "Validate domain name is singular and lowercase"