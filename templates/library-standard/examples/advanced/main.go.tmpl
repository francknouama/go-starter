package main

import (
	"context"
	"fmt"
	"log"

	"{{.ModulePath}}"
)

func main() {
	fmt.Println("{{.ProjectName}} Advanced Example")
	fmt.Println("=================================")

	// Create a client with custom configuration
	config := &{{.ProjectName}}.Config{
		Debug: true,
	}
	config.Logger.Level = "debug"
	config.Logger.Format = "text"

	client, err := {{.ProjectName}}.New(config)
	if err != nil {
		log.Fatalf("Failed to create client: %v", err)
	}
	defer client.Close()

	fmt.Println("Created client with debug logging enabled")

	// Test with various inputs
	testCases := []struct {
		name  string
		input string
	}{
		{"Normal input", "hello world"},
		{"Empty input", ""},
		{"Long input", "this is a much longer input to test the processing capabilities"},
		{"Special characters", "input with special chars: !@#$%^&*()"},
	}

	for _, tc := range testCases {
		fmt.Printf("\n--- Test Case: %s ---\n", tc.name)
		fmt.Printf("Input: '%s'\n", tc.input)
		
		result, err := client.Process(context.Background(), tc.input)
		if err != nil {
			fmt.Printf("Error: %v\n", err)
			continue
		}
		
		fmt.Printf("Result: %s\n", result)
	}

	fmt.Println("\nAdvanced example completed!")
}