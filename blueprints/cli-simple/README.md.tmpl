# {{.ProjectName}}

A simple command-line application built with Go and Cobra.

## Features

- **Simple Structure**: Clean and minimal CLI architecture
- **Essential Flags**: `--help`, `--version`, `--quiet`, `--output`
- **Shell Completion**: Support for bash, zsh, fish, and PowerShell
- **Standard Logging**: Uses Go's standard `slog` package
- **Environment Variables**: Simple configuration via environment variables

## Installation

### Build from source

```bash
# Clone the repository
git clone <repository-url>
cd {{.ProjectName}}

# Build the application
make build

# Or install directly
make install
```

### Using go install

```bash
go install {{.ModulePath}}@latest
```

## Usage

### Basic Usage

```bash
# Show help
{{.ProjectName}} --help

# Show version
{{.ProjectName}} --version

# Run with quiet output
{{.ProjectName}} --quiet

# JSON output format
{{.ProjectName}} --output json
```

### Environment Variables

Configure the application using environment variables:

```bash
# Set log level (debug, info, warn, error)
export {{upper .ProjectName}}_LOG_LEVEL=debug

# Enable debug mode
export {{upper .ProjectName}}_DEBUG=true

# Set default output format
export {{upper .ProjectName}}_FORMAT=json

# Enable quiet mode by default
export {{upper .ProjectName}}_QUIET=true
```

### Shell Completion

Generate shell completion scripts:

```bash
# Bash
{{.ProjectName}} completion bash > /etc/bash_completion.d/{{.ProjectName}}

# Zsh
{{.ProjectName}} completion zsh > "${fpath[1]}/_{{.ProjectName}}"

# Fish
{{.ProjectName}} completion fish > ~/.config/fish/completions/{{.ProjectName}}.fish

# PowerShell
{{.ProjectName}} completion powershell > {{.ProjectName}}.ps1
```

## Development

### Prerequisites

- Go {{.GoVersion}} or later
- Make (optional, for using Makefile)

### Building

```bash
# Build the application
make build

# Run tests
make test

# Format code
make fmt

# Run all checks
make check

# Build for multiple platforms
make build-all
```

### Project Structure

```
{{.ProjectName}}/
├── main.go              # Application entry point
├── config.go            # Configuration management
├── cmd/
│   ├── root.go          # Root command
│   └── version.go       # Version command
├── go.mod               # Go module file
├── Makefile             # Build automation
└── README.md            # This file
```

## Architecture

This project follows a simple CLI architecture:

- **Minimal Dependencies**: Only uses Cobra for CLI framework and standard library
- **Simple Configuration**: Environment variable based configuration
- **Standard Logging**: Uses Go's built-in `slog` package
- **Essential Features**: Focus on core CLI functionality without unnecessary complexity

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the LICENSE file for details.

## Author

{{if .Author}}Created by {{.Author}}{{else}}Created by the {{.ProjectName}} team{{end}}