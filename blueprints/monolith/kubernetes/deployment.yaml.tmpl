apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.ProjectName}}-deployment
  labels:
    app: {{.ProjectName}}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{.ProjectName}}
  template:
    metadata:
      labels:
        app: {{.ProjectName}}
    spec:
      containers:
      - name: {{.ProjectName}}
        image: {{.ProjectName}}:latest
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: ENV
          value: "production"
        {{- if ne .DatabaseDriver ""}}
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: {{.ProjectName}}-secrets
              key: db-host
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{.ProjectName}}-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{.ProjectName}}-secrets
              key: db-password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{.ProjectName}}-secrets
              key: db-name
        {{- end}}
        {{- if eq .SessionStore "redis"}}
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{.ProjectName}}-secrets
              key: redis-url
        {{- end}}
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: {{.ProjectName}}-service
spec:
  selector:
    app: {{.ProjectName}}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: v1
kind: Secret
metadata:
  name: {{.ProjectName}}-secrets
type: Opaque
data:
  # Base64 encoded values - replace with actual secrets
  {{- if ne .DatabaseDriver ""}}
  db-host: cG9zdGdyZXM=  # postgres
  db-user: YWRtaW4=      # admin  
  db-password: cGFzc3dvcmQ=  # password
  db-name: bXlkYXRhYmFzZQ==  # mydatabase
  {{- end}}
  {{- if eq .SessionStore "redis"}}
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=  # redis://redis-service:6379
  {{- end}}