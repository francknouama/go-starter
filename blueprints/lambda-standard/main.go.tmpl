package main

import (
	"os"

	"github.com/aws/aws-lambda-go/lambda"
	"{{.ModulePath}}/internal/logger"
)

var (
	appLogger logger.Logger
)

func init() {
	// Initialize logger for CloudWatch
	factory := logger.NewFactory()
	
	// CloudWatch prefers JSON format for structured logging
	logLevel := getEnv("LOG_LEVEL", "info")
	
	var err error
	appLogger, err = factory.CreateFromProjectConfig(
		"{{.Logger}}",
		logLevel,
		"json", // Always use JSON for CloudWatch
		true,   // Always structured for Lambda
	)
	if err != nil {
		// Fallback to basic logging if factory fails
		appLogger = logger.NewSimpleLogger()
	}

	appLogger.InfoWith("Lambda function initialized", logger.Fields{
		"logger":    "{{.Logger}}",
		"log_level": logLevel,
		"runtime":   "aws-lambda-go",
	})
}

func main() {
	lambda.Start(HandleRequest)
}

func getEnv(key, defaultValue string) string {
	if value := os.Getenv(key); value != "" {
		return value
	}
	return defaultValue
}