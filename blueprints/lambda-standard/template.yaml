name: "lambda-standard"
description: "AWS Lambda function template with CloudWatch logging"
type: "lambda"
architecture: "standard"
version: "1.0.0"
author: "Go-Starter Team"
license: "MIT"

variables:
  - name: "ProjectName"
    description: "Name of the project"
    type: "string"
    required: true
    validation: "^[a-zA-Z0-9_-]+$"

  - name: "ModulePath"
    description: "Go module path"
    type: "string"
    required: true
    validation: "^[a-zA-Z0-9._/-]+$"

  - name: "Author"
    description: "Project author name"
    type: "string"
    required: false
    default: ""

  - name: "Email"
    description: "Author email"
    type: "string"
    required: false
    default: ""

  - name: "License"
    description: "Project license"
    type: "string"
    required: false
    default: "MIT"
    choices:
      - "MIT"
      - "Apache-2.0"
      - "GPL-3.0"
      - "BSD-3-Clause"

  - name: "Logger"
    description: "Logging library (optimized for CloudWatch)"
    type: "string"
    required: false
    default: "slog"
    choices:
      - "slog"
      - "zap"
      - "logrus"
      - "zerolog"

  - name: "GoVersion"
    description: "Go version to use"
    type: "string"
    required: false
    default: "1.21"

files:
  # Core Lambda files
  - source: "main.go.tmpl"
    destination: "main.go"

  - source: "go.mod.tmpl"
    destination: "go.mod"

  - source: "Makefile.tmpl"
    destination: "Makefile"

  - source: "README.md.tmpl"
    destination: "README.md"

  # GitHub Configuration
  - source: "github-workflows-ci.yml.tmpl"
    destination: ".github/workflows/ci.yml"

  - source: "github-workflows-deploy.yml.tmpl"
    destination: ".github/workflows/deploy.yml"

  # Lambda handler
  - source: "handler.go.tmpl"
    destination: "handler.go"

  # Internal packages
  - source: "internal/logger/logger.go.tmpl"
    destination: "internal/logger/logger.go"

  - source: "internal/observability/tracing.go.tmpl"
    destination: "internal/observability/tracing.go"

  - source: "internal/observability/metrics.go.tmpl"
    destination: "internal/observability/metrics.go"

  - source: "internal/observability/cloudwatch.go.tmpl"
    destination: "internal/observability/cloudwatch.go"

  # AWS deployment
  - source: "template.yaml.tmpl"
    destination: "template.yaml"

  - source: "deploy.sh.tmpl"
    destination: "deploy.sh"
    executable: true

  # Environment
  - source: "env-example.tmpl"
    destination: ".env.example"

  - source: "gitignore.tmpl"
    destination: ".gitignore"

dependencies:
  - module: "github.com/aws/aws-lambda-go"
    version: "v1.41.0"
  - module: "github.com/aws/aws-xray-sdk-go"
    version: "v1.8.0"
  - module: "github.com/aws/aws-sdk-go-v2"
    version: "v1.21.0"
  - module: "github.com/aws/aws-sdk-go-v2/service/cloudwatch"
    version: "v1.27.0"
  - module: "go.uber.org/zap"
    version: "v1.26.0"
    condition: "{{eq .Logger \"zap\"}}"
  - module: "github.com/sirupsen/logrus"
    version: "v1.9.3"
    condition: "{{eq .Logger \"logrus\"}}"
  - module: "github.com/rs/zerolog"
    version: "v1.31.0"
    condition: "{{eq .Logger \"zerolog\"}}"

post_hooks:
  - name: "clean_dependencies"
    command: "go mod tidy"
    work_dir: "{{.OutputPath}}"

features:
  - name: "logging"
    description: "CloudWatch-optimized structured logging"
    enabled_when: "true"
    
  - name: "aws_deployment"
    description: "AWS SAM deployment templates"
    enabled_when: "true"
    
  - name: "observability"
    description: "Complete AWS observability stack (X-Ray tracing, CloudWatch metrics)"
    enabled_when: "true"
    
  - name: "performance_monitoring"
    description: "Lambda performance monitoring and alerting"
    enabled_when: "true"