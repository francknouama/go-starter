package cmd

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
	"{{.ModulePath}}/internal/logger"
)

func TestRootCommand(t *testing.T) {
	// Create a test logger
	factory := logger.NewFactory()
	testLogger, err := factory.CreateFromProjectConfig("{{.Logger}}", "info", "text", false)
	assert.NoError(t, err)

	// Set the global logger for testing
	appLogger = testLogger

	// Capture output
	var output bytes.Buffer
	rootCmd.SetOut(&output)
	rootCmd.SetErr(&output)

	// Test root command execution
	rootCmd.SetArgs([]string{})
	err = rootCmd.Execute()
	assert.NoError(t, err)

	// Verify output contains expected content
	outputStr := output.String()
	assert.Contains(t, outputStr, "Welcome to {{.ProjectName}}!")
	assert.Contains(t, outputStr, "Use --help to see available commands")
}

func TestVersionCommand(t *testing.T) {
	// Create a test logger
	factory := logger.NewFactory()
	testLogger, err := factory.CreateFromProjectConfig("{{.Logger}}", "info", "text", false)
	assert.NoError(t, err)

	// Set the global logger for testing
	appLogger = testLogger

	// Capture output
	var output bytes.Buffer
	rootCmd.SetOut(&output)
	rootCmd.SetErr(&output)

	// Test version command
	rootCmd.SetArgs([]string{"version"})
	err = rootCmd.Execute()
	assert.NoError(t, err)

	// Verify output contains version information
	outputStr := output.String()
	assert.Contains(t, outputStr, "{{.ProjectName}} version information")
	assert.Contains(t, outputStr, "Version:")
	assert.Contains(t, outputStr, "Logger:     {{.Logger}}")
}