package server

import (
	"context"
	pb "{{.ModulePath}}/proto"
)

{{- $serviceName := .ProjectName | replace "-" "" | replace "_" "" | title }}

// grpcServer implements the {{$serviceName}}Server interface
type grpcServer struct {
	pb.Unimplemented{{$serviceName}}Server
	handler ServiceHandler
}

// NewGrpcServer creates a new gRPC server instance
func NewGrpcServer(handler ServiceHandler) *grpcServer {
	return &grpcServer{
		handler: handler,
	}
}

// SayHello implements the SayHello RPC method
func (s *grpcServer) SayHello(ctx context.Context, in *pb.HelloRequest) (*pb.HelloResponse, error) {
	message := s.handler.SayHello(in.Name)
	return &pb.HelloResponse{Message: message}, nil
}

// ServiceHandler interface defines the business logic methods
type ServiceHandler interface {
	SayHello(name string) string
}