apiVersion: v1
kind: Service
metadata:
  name: {{.ProjectName}}
  namespace: {{if .EnableServiceMesh}}{{.ServiceMesh.Namespace}}{{else}}default{{end}}
  labels:
    app: {{.ProjectName}}
    service: {{.ProjectName}}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
{{if .EnableObservability}}
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
{{end}}
spec:
  type: ClusterIP
  ports:
  - name: {{if eq .CommunicationProtocol "grpc"}}grpc{{else}}http{{end}}
    port: {{.Port}}
    targetPort: {{if eq .CommunicationProtocol "grpc"}}grpc{{else}}http{{end}}
    protocol: TCP
{{if .EnableObservability}}
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  - name: health
    port: 8080
    targetPort: health
    protocol: TCP
{{end}}
  selector:
    app: {{.ProjectName}}

---

{{if eq .CommunicationProtocol "rest"}}
apiVersion: v1
kind: Service
metadata:
  name: {{.ProjectName}}-external
  namespace: {{if .EnableServiceMesh}}{{.ServiceMesh.Namespace}}{{else}}default{{end}}
  labels:
    app: {{.ProjectName}}
    service: {{.ProjectName}}-external
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  selector:
    app: {{.ProjectName}}

---
{{end}}

{{if .EnableObservability}}
apiVersion: v1
kind: Service
metadata:
  name: {{.ProjectName}}-metrics
  namespace: {{if .EnableServiceMesh}}{{.ServiceMesh.Namespace}}{{else}}default{{end}}
  labels:
    app: {{.ProjectName}}
    service: {{.ProjectName}}-metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: {{.ProjectName}}

---

apiVersion: v1
kind: Service
metadata:
  name: {{.ProjectName}}-health
  namespace: {{if .EnableServiceMesh}}{{.ServiceMesh.Namespace}}{{else}}default{{end}}
  labels:
    app: {{.ProjectName}}
    service: {{.ProjectName}}-health
spec:
  type: ClusterIP
  ports:
  - name: health
    port: 8080
    targetPort: health
    protocol: TCP
  selector:
    app: {{.ProjectName}}
{{end}}