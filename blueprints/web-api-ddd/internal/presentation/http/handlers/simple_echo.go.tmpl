{{- if eq .DatabaseDriver ""}}
package handlers

import (
	"net/http"

	"github.com/labstack/echo/v4"
	"{{.ModulePath}}/internal/infrastructure/logger"
)

// EchoHandlers handles HTTP requests using Echo framework
type EchoHandlers struct {
	logger logger.Logger
}

// NewEchoHandlers creates a new Echo handlers instance
func NewEchoHandlers(log logger.Logger) *EchoHandlers {
	return &EchoHandlers{
		logger: log,
	}
}

// SetupRoutes configures the Echo routes for the application
func (h *EchoHandlers) SetupRoutes() *echo.Echo {
	e := echo.New()

	// Health check endpoint
	e.GET("/health", h.HealthCheck)

	// API routes
	api := e.Group("/api/v1")
	api.GET("/status", h.GetStatus)

	return e
}

// HealthCheck handles health check requests
func (h *EchoHandlers) HealthCheck(c echo.Context) error {
	response := map[string]interface{}{
		"status": "healthy",
		"framework": "echo",
		"architecture": "ddd",
	}
	return c.JSON(http.StatusOK, response)
}

// GetStatus handles status requests
func (h *EchoHandlers) GetStatus(c echo.Context) error {
	response := map[string]interface{}{
		"service": "{{.ProjectName}}",
		"version": "1.0.0",
		"architecture": "ddd",
		"framework": "echo",
	}
	return c.JSON(http.StatusOK, response)
}
{{- end}}