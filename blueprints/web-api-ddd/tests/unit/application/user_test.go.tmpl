package application_test

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"{{.ModulePath}}/internal/application/{{.DomainName}}"
)

func TestCreate{{.DomainName | title}}Command_Validation(t *testing.T) {
	t.Run("Valid command", func(t *testing.T) {
		cmd := {{.DomainName}}.Create{{.DomainName | title}}Command{
			Name:        "Test User",
			Description: "A test user for validation",
		}

		assert.NotEmpty(t, cmd.Name)
		assert.NotEmpty(t, cmd.Description)
	})

	t.Run("Invalid command - empty name", func(t *testing.T) {
		cmd := {{.DomainName}}.Create{{.DomainName | title}}Command{
			Name:        "",
			Description: "A test user",
		}

		assert.Empty(t, cmd.Name)
		assert.NotEmpty(t, cmd.Description)
	})
}

func TestUpdate{{.DomainName | title}}Command_Validation(t *testing.T) {
	t.Run("Valid command", func(t *testing.T) {
		cmd := {{.DomainName}}.Update{{.DomainName | title}}Command{
			ID:          "123e4567-e89b-12d3-a456-426614174000",
			Name:        stringPtr("Updated User"),
			Description: stringPtr("Updated description"),
		}

		assert.NotEmpty(t, cmd.ID)
		assert.NotNil(t, cmd.Name)
		assert.NotNil(t, cmd.Description)
	})
}

// Helper function for pointer to string
func stringPtr(s string) *string {
	return &s
}

func Test{{.DomainName | title}}Query_Validation(t *testing.T) {
	t.Run("Valid get by ID query", func(t *testing.T) {
		query := {{.DomainName}}.Get{{.DomainName | title}}ByIDQuery{
			ID: "123e4567-e89b-12d3-a456-426614174000",
		}

		assert.NotEmpty(t, query.ID)
	})

	t.Run("Valid get by name query", func(t *testing.T) {
		query := {{.DomainName}}.Get{{.DomainName | title}}ByNameQuery{
			Name: "test-user",
		}

		assert.NotEmpty(t, query.Name)
		assert.Equal(t, "test-user", query.Name)
	})
}

// Test{{.DomainName | title}}Handlers tests the command and query handlers
func Test{{.DomainName | title}}Handlers(t *testing.T) {
	t.Run("Command handlers exist", func(t *testing.T) {
		// This test ensures handlers are properly defined
		// In a real application, you would mock dependencies and test actual handler logic
		assert.True(t, true, "Handlers should be properly implemented")
	})

	t.Run("Query handlers exist", func(t *testing.T) {
		// This test ensures query handlers are properly defined
		// In a real application, you would mock dependencies and test actual handler logic
		assert.True(t, true, "Query handlers should be properly implemented")
	})
}