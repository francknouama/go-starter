package models

import "time"

// ErrorResponse represents an error response
type ErrorResponse struct {
	Error string `json:"error"`
	Code  string `json:"code"`
}

// MessageResponse represents a simple message response
type MessageResponse struct {
	Message string `json:"message"`
}

// AuthResponse represents authentication response
type AuthResponse struct {
	Token        string    `json:"token"`
	RefreshToken string    `json:"refresh_token,omitempty"`
	User         User      `json:"user"`
	ExpiresAt    time.Time `json:"expires_at"`
}

// User represents a user
type User struct {
	ID        string    `json:"id"`
	Email     string    `json:"email"`
	FirstName string    `json:"first_name"`
	LastName  string    `json:"last_name"`
	Role      string    `json:"role"`
	Active    bool      `json:"active"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// UserProfile represents a user profile (without sensitive data)
type UserProfile struct {
	ID        string    `json:"id"`
	Email     string    `json:"email"`
	FirstName string    `json:"first_name"`
	LastName  string    `json:"last_name"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// UsersResponse represents a list of users with pagination
type UsersResponse struct {
	Users []User `json:"users"`
	Total int    `json:"total"`
	Page  int    `json:"page"`
	Pages int    `json:"pages"`
}

// DataItem represents a data item
type DataItem struct {
	ID        string    `json:"id"`
	Name      string    `json:"name"`
	Value     string    `json:"value"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// DataResponse represents a list of data items
type DataResponse struct {
	Items []DataItem `json:"items"`
	Total int        `json:"total"`
	Page  int        `json:"page,omitempty"`
	Pages int        `json:"pages,omitempty"`
}

// HealthResponse represents health check response
type HealthResponse struct {
	Status      string        `json:"status"`
	Service     string        `json:"service"`
	Version     string        `json:"version"`
	Timestamp   time.Time     `json:"timestamp"`
	Uptime      time.Duration `json:"uptime"`
	Environment string        `json:"environment"`
	Memory      MemoryStats   `json:"memory"`
	Goroutines  int           `json:"goroutines"`
}

// MemoryStats represents memory statistics
type MemoryStats struct {
	Alloc      uint64 `json:"alloc"`
	TotalAlloc uint64 `json:"total_alloc"`
	Sys        uint64 `json:"sys"`
	NumGC      uint32 `json:"num_gc"`
}

// ReadinessResponse represents readiness check response
type ReadinessResponse struct {
	Ready     bool             `json:"ready"`
	Service   string           `json:"service"`
	Timestamp time.Time        `json:"timestamp"`
	Checks    []ReadinessCheck `json:"checks"`
}

// ReadinessCheck represents a single readiness check
type ReadinessCheck struct {
	Name   string `json:"name"`
	Status string `json:"status"` // pass, warn, fail
	Detail string `json:"detail,omitempty"`
}

// MetricsResponse represents metrics response
type MetricsResponse struct {
	Service   string                 `json:"service"`
	Timestamp time.Time              `json:"timestamp"`
	Metrics   map[string]interface{} `json:"metrics"`
}

// PaginationMeta represents pagination metadata
type PaginationMeta struct {
	Page      int `json:"page"`
	PageSize  int `json:"page_size"`
	Total     int `json:"total"`
	Pages     int `json:"pages"`
	HasNext   bool `json:"has_next"`
	HasPrev   bool `json:"has_prev"`
}

// APIResponse represents a generic API response with metadata
type APIResponse struct {
	Data       interface{}     `json:"data"`
	Pagination *PaginationMeta `json:"pagination,omitempty"`
	Timestamp  time.Time       `json:"timestamp"`
	RequestID  string          `json:"request_id,omitempty"`
}