name: Feature Request
description: Suggest an idea for this project
title: "[Feature]: "
labels: ["enhancement", "needs-triage", "priority/low"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        Thanks for taking the time to suggest a new feature!
        
  - type: dropdown
    id: feature-category
    attributes:
      label: Feature Category
      description: What type of feature are you requesting?
      options:
        - New Template Type
        - Template Enhancement
        - CLI Enhancement
        - Web UI Feature
        - Logger Integration
        - Database Integration
        - Architecture Pattern
        - Developer Experience
        - Other
    validations:
      required: true
      
  - type: textarea
    id: problem
    attributes:
      label: Problem Description
      description: Is your feature request related to a problem? Please describe.
      placeholder: I'm always frustrated when...
    validations:
      required: true
      
  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: Describe the solution you'd like
      placeholder: I would like to see...
    validations:
      required: true
      
  - type: textarea
    id: alternatives
    attributes:
      label: Alternatives Considered
      description: Describe any alternative solutions or features you've considered
      placeholder: I've also considered...
      
  - type: textarea
    id: additional-context
    attributes:
      label: Additional Context
      description: Add any other context, screenshots, or examples about the feature request here
      
  - type: dropdown
    id: complexity
    attributes:
      label: Estimated Complexity
      description: How complex do you think this feature would be to implement?
      options:
        - Low (simple addition)
        - Medium (moderate changes)
        - High (major changes)
        - I'm not sure
    validations:
      required: false

  - type: markdown
    attributes:
      value: |
        ## ðŸ§ª Test-Driven Development (TDD) Requirements
        
        **All feature development in this project follows TDD principles.** Please ensure you understand and agree to the testing requirements below.

  - type: textarea
    id: test-plan
    attributes:
      label: Test Plan
      description: |
        Describe your testing approach for this feature. Include:
        - What unit tests will be needed
        - What integration tests will be needed  
        - Expected test coverage goals
        - Any edge cases to test
      placeholder: |
        Unit Tests:
        - Test function X with valid inputs
        - Test function X with invalid inputs
        - Test error handling for edge case Y
        
        Integration Tests:
        - Test feature works with existing components
        - Test feature works across different configurations
        
        Coverage Goals:
        - Maintain >70% coverage for new code
        - All new functions must have tests
      value: |
        Unit Tests:
        - [ ] 
        - [ ] 
        - [ ] 

        Integration Tests:
        - [ ] 
        - [ ] 

        Coverage Goals:
        - [ ] Maintain >70% coverage for new code
        - [ ] All new functions have comprehensive tests
        - [ ] Edge cases and error paths tested
    validations:
      required: true

  - type: checkboxes
    id: tdd-commitment
    attributes:
      label: TDD Development Commitment
      description: By checking these boxes, you commit to following TDD practices for this feature
      options:
        - label: I will write tests BEFORE implementing the feature (Red-Green-Refactor cycle)
          required: true
        - label: I will ensure all new code has comprehensive test coverage (>70%)
          required: true
        - label: I will test both happy path and error scenarios
          required: true
        - label: I will run the full test suite before submitting PRs
          required: true
        - label: I understand that PRs without proper tests will not be merged
          required: true

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance Criteria & Definition of Done
      description: |
        Define specific, testable criteria that must be met for this feature to be considered complete.
        Each criterion should be verifiable through automated tests.
      placeholder: |
        - [ ] Feature X performs action Y when condition Z is met
        - [ ] Feature handles error case A by returning appropriate error message
        - [ ] Feature integrates with existing component B without breaking functionality
        - [ ] All new code has >70% test coverage
        - [ ] All tests pass in CI/CD pipeline
        - [ ] Documentation is updated to reflect new feature
      value: |
        Functional Requirements:
        - [ ] 
        - [ ] 
        - [ ] 

        Quality Requirements:
        - [ ] All new code has >70% test coverage
        - [ ] All tests pass in CI/CD pipeline
        - [ ] No existing tests are broken
        - [ ] Code follows project style guidelines
        - [ ] Documentation updated (if applicable)
    validations:
      required: true
      
  - type: checkboxes
    id: terms
    attributes:
      label: Code of Conduct & Development Standards
      description: By submitting this issue, you agree to follow our development standards
      options:
        - label: I agree to follow this project's [Code of Conduct](https://github.com/francknouama/go-starter/blob/main/CONTRIBUTING.md)
          required: true
        - label: I commit to following TDD practices as outlined above
          required: true
        - label: I understand that code without proper tests will be rejected
          required: true