name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  GO_VERSION: '1.21'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  build:
    name: Build and Release
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << EOF
          # Release ${{ steps.version.outputs.version }}
          
          ## 🚀 What's New in go-starter
          
          ### ✨ Features
          - **Complete Logger Selector System**: Choose from 4 logger types (slog, zap, logrus, zerolog)
          - **4 Production-Ready Templates**: Web API, CLI, Library, AWS Lambda
          - **16 Template+Logger Combinations**: All tested and validated
          - **Modern Go Practices**: Latest Go patterns and best practices
          
          ### 🏗️ Supported Project Types
          - **Web API**: Gin framework with database integration, authentication, Docker support
          - **CLI Application**: Cobra framework with configuration management
          - **Go Library**: Clean public API with comprehensive documentation
          - **AWS Lambda**: Serverless functions with CloudWatch-optimized logging
          
          ### 📦 Installation
          
          **Using Go install:**
          \`\`\`bash
          go install github.com/francknouama/go-starter@${{ steps.version.outputs.version }}
          \`\`\`
          
          **Download binary:**
          Download the appropriate binary for your platform from the assets below.
          
          ### 🎯 Quick Start
          
          \`\`\`bash
          # Interactive mode
          go-starter new my-project
          
          # Direct mode examples
          go-starter new my-api --type=web-api --framework=gin --logger=zap
          go-starter new my-cli --type=cli --framework=cobra --logger=logrus
          go-starter new my-lib --type=library --logger=slog
          go-starter new my-lambda --type=lambda --logger=zerolog
          \`\`\`
          
          ### 🔄 Migration from Previous Versions
          This is the first stable release (v1.0.0) of go-starter.
          
          ### 📊 Project Statistics
          - **4/12 templates implemented** (33% of planned scope)
          - **48 total combinations** when including future templates
          - **100% test coverage** for implemented templates
          - **Production ready** with comprehensive validation
          
          ### 🙏 Special Thanks
          Thanks to all contributors and early adopters who helped shape this release!
          
          ---
          
          **Full Changelog**: https://github.com/francknouama/go-starter/commits/${{ steps.version.outputs.version }}
          EOF

      - name: Build binaries
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew:
    name: Update Homebrew Formula
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-')
    steps:
      - name: Extract version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update Homebrew formula
        uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: go-starter
          formula-path: Formula/go-starter.rb
          homebrew-tap: francknouama/homebrew-tap
          download-url: https://github.com/francknouama/go-starter/archive/v${{ steps.version.outputs.version }}.tar.gz
          commit-message: |
            go-starter ${{ steps.version.outputs.version }}
            
            Created by https://github.com/francknouama/go-starter/actions/runs/${{ github.run_id }}
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}