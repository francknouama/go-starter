name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: ['1.21', '1.22']
        os: [ubuntu-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    # Skip caching to avoid GitHub cache service issues

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  template-validation:
    name: Template Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Build go-starter
      run: make build

    - name: Run template compilation tests
      run: go test -v ./tests/integration/... -run TestTemplateCompilation
      timeout-minutes: 10

    - name: Run template logger tests
      run: go test -v ./tests/integration/... -run TestTemplateWithDifferentLoggers
      timeout-minutes: 10

    - name: Run template database tests  
      run: go test -v ./tests/integration/... -run TestTemplateWithDatabaseOptions
      timeout-minutes: 10

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Build
      run: go build -o bin/go-starter .

    - name: Test CLI
      run: |
        chmod +x bin/go-starter || true
        ./bin/go-starter version
        ./bin/go-starter list
        ./bin/go-starter --help

  # security:
  #   name: Security Scan
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@v4

  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: 1.21

  #   - name: Run Gosec Security Scanner
  #     run: |
  #       go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
  #       gosec ./...